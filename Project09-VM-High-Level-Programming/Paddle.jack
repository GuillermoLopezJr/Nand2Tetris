
class Paddle {
    field int x, y;
    field int width, height;
    field int velX;
    
    /** Constructs a new paddle with a given location and size. */
    constructor Paddle new( int Ax, int Ay, int w, int h) {
        let x = Ax;
        let y = Ay;
        let width = w;
        let height = h;
        let velX = 10;
        do draw();

        return this;
    }
    
    method int getX() {
        return x;
    }

    method int getY() {
        return y;
    }
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws the paddle on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width, y + height);
        return;
    }

    /** Erases the paddle from the screen. */
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + width, y + height);
        return;
    }
    
    method boolean hit(int bx, int by, int r){
        if ( (bx < (x + width)) & (bx > x) & ( (by + r + 1) = y)) {
            return true;
        }
        return false;
    }

    /** Moves left by 2 pixels. */
    method void moveLeft() {
        if (x > 1) {
            do Screen.setColor(false);
            do Screen.drawRectangle((x + width) - 1, y, x + width, y + height);
            let x = x - 2;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + 1, y + height);
        }
        return;
    }

    /** Moves right by 2 pixels. */
    method void moveRight() {
        if ((x + width) < 510) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + 1, y + height);
            let x = x + 2;
            do Screen.setColor(true);
            do Screen.drawRectangle((x + width) - 1, y, x + width, y + height);
        }
        return;
    }
}
